{"ast":null,"code":"import * as Yup from \"yup\";\nexport var validationSchemaRegister = Yup.object().shape({\n  userName: Yup.string().required(\"First Name is required\"),\n  email: Yup.string().email(\"Enter a valid email\").required(\"Please enter a registered email\"),\n  password: Yup.string().required(\"Please enter a password\").min(6, \"Password must have at least 6 characters\"),\n  confirmPassword: Yup.string().required(\"Please confirm password\").oneOf([Yup.ref(\"password\")], \"Password & Confirm Password does not match\")\n});\nexport var validationSchemaLogin = Yup.object().shape({\n  userName: Yup.string().required(\"userName is required\"),\n  password: Yup.string().required(\"Please enter a password\").min(6, \"Password must have at least 6 characters\")\n});\nexport var validationSchemaForgot = Yup.object().shape({\n  email: Yup.string().email(\"Enter a valid email\").required(\"Please enter a registered email\")\n});","map":{"version":3,"sources":["D:/VNPT Technology/IoT-System/App/assets/js/validation.js"],"names":["Yup","validationSchemaRegister","object","shape","userName","string","required","email","password","min","confirmPassword","oneOf","ref","validationSchemaLogin","validationSchemaForgot"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAGA,OAAO,IAAMC,wBAAwB,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AACvDC,EAAAA,QAAQ,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CAD6C;AAGvDC,EAAAA,KAAK,EAAEP,GAAG,CAACK,MAAJ,GACFE,KADE,CACI,qBADJ,EAEFD,QAFE,CAEO,iCAFP,CAHgD;AAMvDE,EAAAA,QAAQ,EAAER,GAAG,CAACK,MAAJ,GACLC,QADK,CACI,yBADJ,EAELG,GAFK,CAED,CAFC,EAEE,0CAFF,CAN6C;AASvDC,EAAAA,eAAe,EAAEV,GAAG,CAACK,MAAJ,GACZC,QADY,CACH,yBADG,EAEZK,KAFY,CAEN,CAACX,GAAG,CAACY,GAAJ,CAAQ,UAAR,CAAD,CAFM,EAEiB,4CAFjB;AATsC,CAAnB,CAAjC;AAaP,OAAO,IAAMC,qBAAqB,GAAGb,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAEpDC,EAAAA,QAAQ,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB,CAF0C;AAIpDE,EAAAA,QAAQ,EAAER,GAAG,CAACK,MAAJ,GACLC,QADK,CACI,yBADJ,EAELG,GAFK,CAED,CAFC,EAEE,0CAFF;AAJ0C,CAAnB,CAA9B;AASP,OAAO,IAAMK,sBAAsB,GAAGd,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAErDI,EAAAA,KAAK,EAAEP,GAAG,CAACK,MAAJ,GACFE,KADE,CACI,qBADJ,EAEFD,QAFE,CAEO,iCAFP;AAF8C,CAAnB,CAA/B","sourcesContent":["import * as Yup from \"yup\";\r\n\r\n// https://github.com/jquense/yup\r\nexport const validationSchemaRegister = Yup.object().shape({\r\n    userName: Yup.string().required(\"First Name is required\"),\r\n\r\n    email: Yup.string()\r\n        .email(\"Enter a valid email\")\r\n        .required(\"Please enter a registered email\"),\r\n    password: Yup.string()\r\n        .required(\"Please enter a password\")\r\n        .min(6, \"Password must have at least 6 characters\"),\r\n    confirmPassword: Yup.string()\r\n        .required(\"Please confirm password\")\r\n        .oneOf([Yup.ref(\"password\")], \"Password & Confirm Password does not match\"),\r\n});\r\nexport const validationSchemaLogin = Yup.object().shape({\r\n\r\n    userName: Yup.string().required(\"userName is required\"),\r\n\r\n    password: Yup.string()\r\n        .required(\"Please enter a password\")\r\n        .min(6, \"Password must have at least 6 characters\"),\r\n\r\n});\r\nexport const validationSchemaForgot = Yup.object().shape({\r\n\r\n    email: Yup.string()\r\n        .email(\"Enter a valid email\")\r\n        .required(\"Please enter a registered email\"),\r\n});"]},"metadata":{},"sourceType":"module"}