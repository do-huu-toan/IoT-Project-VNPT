{"ast":null,"code":"var _jsxFileName = \"D:\\\\VNPT Technology\\\\IoT-System\\\\App\\\\views\\\\LoginForm.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Constants from \"expo-constants\";\nimport { style_background } from \"../assets/css/style_background\";\nimport { StatusBar } from 'expo-status-bar';\nimport { Ionicons, FontAwesome5 } from '@expo/vector-icons';\nimport { Formik } from 'formik';\nimport { validationSchemaLogin } from \"../assets/js/validation\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport FormField from \"../components/FormField\";\nimport * as SecureStore from 'expo-secure-store';\nimport Background from \"./Background\";\n\nfunction getValueFor(key) {\n  var result;\n  return _regeneratorRuntime.async(function getValueFor$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(key));\n\n        case 2:\n          result = _context.sent;\n\n          if (result) {\n            result = JSON.parse(result);\n            alert(\"üîê Here's your value üîê \\n\" + result.password);\n          } else {\n            alert('No values stored under that key.');\n          }\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default function LoginForm(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  function onSubmitHandler(values) {\n    return _regeneratorRuntime.async(function onSubmitHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync(\"Nam11\", JSON.stringify(values)));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function isFormValid(isValid, touched) {\n    return isValid && Object.keys(touched).length !== 0;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), React.createElement(StatusBar, {\n    style: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      password: \"\",\n      userName: \"\"\n    },\n    enableReinitialize: true,\n    onSubmit: onSubmitHandler,\n    validationSchema: validationSchemaLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, function (_ref2) {\n    var handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        isValid = _ref2.isValid;\n    return React.createElement(React.Fragment, null, React.createElement(Background, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }\n    }), React.createElement(View, {\n      style: style_background.form,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }\n    }, React.createElement(Text, {\n      style: style_background.textForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }\n    }, \"\\u0110\\u0103ng nh\\u1EADp\"), React.createElement(FormField, {\n      style: style_background.input,\n      field: \"userName\",\n      label: \"t\\xEAn \\u0111\\u0103ng nh\\u1EADp\",\n      autoCapitalize: \"words\",\n      values: values,\n      touched: touched,\n      errors: errors,\n      handleChange: handleChange,\n      handleBlur: handleBlur,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 23\n      }\n    }), React.createElement(FormField, {\n      field: \"password\",\n      label: \"nh\\u1EADp m\\u1EADt kh\\u1EA9u\",\n      autoCapitalize: \"words\",\n      values: values,\n      touched: touched,\n      errors: errors,\n      handleChange: handleChange,\n      handleBlur: handleBlur,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 23\n      }\n    }), React.createElement(TouchableOpacity, {\n      disabled: !isFormValid(isValid, touched),\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 23\n      }\n    }, React.createElement(View, {\n      style: [style_background.btn, {\n        opacity: isFormValid(isValid, touched) ? 1 : 0.5\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: style_background.buttonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 27\n      }\n    }, \"SUBMIT\"))), React.createElement(TouchableOpacity, {\n      style: style_background.forgot,\n      onPress: function onPress() {\n        return navigation.navigate('forgotForm');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 23\n      }\n    }, React.createElement(Text, {\n      style: style_background.link,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 27\n      }\n    }, \"Qu\\xEAn m\\u1EADt kh\\u1EA9u\")), React.createElement(View, {\n      style: style_background.row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 23\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"#fff\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, \"b\\u1EA1n ch\\u01B0a c\\xF3 t\\xE0i kho\\u1EA3n\"), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('ƒëƒÉng k√≠');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: style_background.link,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 27\n      }\n    }, \"\\u0111\\u0103ng k\\xED\")))));\n  }))))));\n}","map":{"version":3,"sources":["D:/VNPT Technology/IoT-System/App/views/LoginForm.jsx"],"names":["React","useState","Constants","style_background","StatusBar","Ionicons","FontAwesome5","Formik","validationSchemaLogin","KeyboardAwareScrollView","FormField","SecureStore","Background","getValueFor","key","getItemAsync","result","JSON","parse","alert","password","LoginForm","navigation","onSubmitHandler","values","setItemAsync","stringify","isFormValid","isValid","touched","Object","keys","length","flex","Platform","OS","Keyboard","dismiss","justifyContent","userName","handleChange","handleBlur","handleSubmit","errors","form","textForm","input","btn","opacity","buttonText","forgot","navigate","link","row","color"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\r\nimport {KeyboardAvoidingView,TouchableWithoutFeedback,\r\n    Keyboard, StyleSheet,Text,View,SafeAreaView,\r\n    TouchableOpacity,TextInput ,Image,Dimensions,Platform ,\r\n    Switch,Button} from \"react-native\";\r\nimport  Constants  from \"expo-constants\";\r\nimport { style_background } from \"../assets/css/style_background\";\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { Ionicons,FontAwesome5 } from '@expo/vector-icons';\r\nimport { Formik } from 'formik';\r\nimport { validationSchemaLogin } from \"../assets/js/validation\";\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\nimport FormField from \"../components/FormField\";\r\n\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport Background from \"./Background\";\r\n\r\n\r\n\r\n\r\nasync function getValueFor(key) {\r\n  let result = await SecureStore.getItemAsync(key);\r\n  if (result) {\r\n    result=JSON.parse(result)\r\n    alert(\"üîê Here's your value üîê \\n\" + result.password);\r\n  } else {\r\n    alert('No values stored under that key.');\r\n  }\r\n}\r\nexport default function LoginForm({navigation}) {\r\n    async function onSubmitHandler(values) {\r\n      \r\n        await SecureStore.setItemAsync(\"Nam11\",JSON.stringify(values));\r\n      \r\n    }\r\n      \r\n    function isFormValid(isValid, touched) {\r\n      return isValid && Object.keys(touched).length !== 0;\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        <SafeAreaView  />\r\n  \r\n        <StatusBar style=\"light\" />\r\n        <SafeAreaView style={{flex:1}}>  \r\n          <KeyboardAvoidingView\r\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n            style={{flex:1}}\r\n          >\r\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n              <View style={{flex:1,justifyContent:\"center\"}}>\r\n              <Formik\r\n                  initialValues={{          \r\n                    password: \"\",\r\n                    userName: \"\",\r\n                  }}\r\n                  enableReinitialize\r\n                  onSubmit={onSubmitHandler}\r\n                  validationSchema={validationSchemaLogin}\r\n                >\r\n                  {({\r\n                    handleChange,handleBlur,handleSubmit,\r\n                    values,errors,touched,isValid,\r\n                  }) => (\r\n                    <> \r\n                      <Background />\r\n                      <View style={style_background.form}>\r\n                      <Text style={style_background.textForm}>ƒêƒÉng nh·∫≠p</Text>\r\n                        {/* <TextInput\r\n                        onSubmitEditing={event => {\r\n                          getValueFor(event.nativeEvent.text);\r\n                        }}\r\n                        placeholder=\"Enter the key for the value you want to get\"\r\n                      /> */}\r\n                      <FormField\r\n                          style={style_background.input}\r\n                        field=\"userName\"\r\n                        label=\"t√™n ƒëƒÉng nh·∫≠p\"\r\n                        autoCapitalize=\"words\"\r\n                        values={values}\r\n                        touched={touched}\r\n                        errors={errors}\r\n                        handleChange={handleChange}\r\n                        handleBlur={handleBlur}\r\n                      />\r\n                      <FormField\r\n                        field=\"password\"\r\n                        label=\"nh·∫≠p m·∫≠t kh·∫©u\"\r\n                        autoCapitalize=\"words\"\r\n                        values={values}\r\n                        touched={touched}\r\n                        errors={errors}\r\n                        handleChange={handleChange}\r\n                        handleBlur={handleBlur}\r\n                      />\r\n\r\n                    \r\n\r\n                      <TouchableOpacity\r\n                        disabled={!isFormValid(isValid, touched)}\r\n                        onPress={handleSubmit}\r\n                      >\r\n                        <View\r\n                          style={[\r\n                            style_background.btn,\r\n                            {\r\n                              opacity: isFormValid(isValid, touched) ? 1 : 0.5,\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Text style={style_background.buttonText}>SUBMIT</Text>\r\n                        </View>\r\n                      </TouchableOpacity>\r\n                      \r\n                      <TouchableOpacity style={style_background.forgot }\r\n                       onPress={() => navigation.navigate('forgotForm')}>\r\n                          <Text style={style_background.link}>Qu√™n m·∫≠t kh·∫©u</Text>\r\n                        </TouchableOpacity>\r\n                      <View style={style_background.row}>\r\n                        \r\n                        <Text style={{color:\"#fff\"}}>b·∫°n ch∆∞a c√≥ t√†i kho·∫£n</Text>\r\n                        <TouchableOpacity onPress={() => navigation.navigate('ƒëƒÉng k√≠')}>\r\n                          <Text style={style_background.link}>ƒëƒÉng k√≠</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                      </View>\r\n                      \r\n                    </>\r\n                  )}\r\n                </Formik>\r\n              </View>\r\n            </TouchableWithoutFeedback>\r\n          </KeyboardAvoidingView>\r\n        </SafeAreaView>\r\n      </>\r\n    );\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}